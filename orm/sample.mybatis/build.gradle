/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.6/userguide/java_library_plugin.html
 */

// plugins {
    // Apply the java-library plugin to add support for Java Library
//    id 'java-library'
//}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'eclipse'
mainClassName = 'sample.mybatis.Main'
configurations {
    jaxb
}
dependencies {
	//JAXB model generation
    jaxb 'javax.xml.bind:jaxb-api:2.2.11'
    jaxb 'com.sun.xml.bind:jaxb-xjc:2.2.11'
    jaxb 'com.sun.xml.bind:jaxb-impl:2.2.11'
    jaxb 'com.sun.xml.bind:jaxb-osgi:2.2.11'
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    // api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    // implementation 'com.google.guava:guava:23.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.11'
    compile 'org.mybatis:mybatis:3.4.6'
    compile 'log4j:log4j:1.2.17'
    compile name: 'postgresql-42.2.2'
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    flatDir {
        dirs 'libs'
    }
}

jar {
    manifest {
        attributes 'Main-Class': 'sample.mybatis.Main'
    }
}

ext {
    jaxbTargetDir = file("build/generated/main/jaxb")
}

//generate JAXB classes from XSD's
task generateJAXBclasses() {
    doLast {
        if (!jaxbTargetDir.exists()) {
            jaxbTargetDir.mkdirs()
        }

        ant.taskdef(name: 'xjc', classname: 'com.sun.tools.xjc.XJCTask', classpath: configurations.jaxb.asPath)
        ant.jaxbTargetDir = "build/generated/main/jaxb"

        def xsdDir = "src/main/resources/xsd"

        ant.xjc(
                destdir: "build/generated/main/jaxb",
                package: "com.cft.pts.payment.processing.integration.iso20022.model.wire.sepainst",
                binding: "src/main/resources/xsd/pain.xjb",
                schema: "src/main/resources/xsd/pain.xsd",
                removeOldOutput: 'yes',
                extension: 'true'
        )
                {
                    arg(line: "-npa")
                }
        ant.xjc(
                destdir: "build/generated/main/jaxb",
                package: "com.cft.pts.payment.processing.integration.iso20022.model.wire.pain00100108",
                binding: "src/main/resources/xsd/pain.001.001.08.wire.xjb",
                schema: "src/main/resources/xsd/pain.001.001.08.wire.xsd",
                removeOldOutput: 'yes',
                extension: 'true'
        )
                {
                    arg(line: "-npa")
                }
        ant.xjc(
                destdir: "build/generated/main/jaxb",
                package: "com.cft.ak",
                binding: "src/main/resources/xsd/akschema.xjb",
                schema: "src/main/resources/xsd/akschema.xsd",
                removeOldOutput: 'yes',
                extension: 'true'
        )
                {
                    arg(line: "-npa")
                }
    }
}

compileJava.dependsOn generateJAXBclasses